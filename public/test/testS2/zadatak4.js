/*var TestParser = require('../testoviparser');
var chai = require('chai'); */
var assert = chai.assert;
describe('TestParser', function() {
 describe('porediRezultate()', function() {
   it('should return 100% accuracy (same tests)', function() {
     var report1 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":2,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 3 values when parameter is a number\",\"fullTitle\":\"Function should return 3 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"A Function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"A Function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is a number\",\"fullTitle\":\"Function should return 3 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
     var report2 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":2,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"A Function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is a number\",\"fullTitle\":\"Function should return 3 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"A Function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is a number\",\"fullTitle\":\"Function should return 3 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
     var result1 = TestParser.porediRezultate(report1, report2);
     assert.equal(result1.promjena, "100%", "Promjena treba biti 100%");
     assert.deepEqual(result1.greske,[]);
     assert.equal(JSON.stringify(result1), '{"promjena":"100%","greske":[]}');
   });
   it('should return 50% accuracy (same tests)', function() {
    var report3 = "{\"stats\":{\"suites\":2,\"tests\":4,\"passes\":4,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
    var report4 = "{\"stats\":{\"suites\":2,\"tests\":4,\"passes\":2,\"pending\":0,\"failures\":2,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
    var result2 = TestParser.porediRezultate(report3, report4);
    var niz = ["Function should return 4 values when parameter is a number", "This function should return no values when there is no parameter"];
    assert.equal(result2.promjena, "50%", "Promjena treba biti 50%");
    assert.deepEqual(result2.greske,niz);
    assert.equal(JSON.stringify(result2), '{"promjena":"50%","greske":["Function should return 4 values when parameter is a number","This function should return no values when there is no parameter"]}');
    });
    it('should return 75% accuracy (different tests)', function() {
      var report5 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":0,\"pending\":0,\"failures\":2,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[]}";
      var report6 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":1,\"pending\":0,\"failures\":1,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var result3 = TestParser.porediRezultate(report5, report6);
      var niz = ["Function should return 4 values when parameter is a number", "This function should return 2 values when parameter is string", "This function should return no values when there is no parameter"];
      assert.equal(result3.promjena, "75%", "Promjena treba biti 75%");
      assert.deepEqual(result3.greske,niz);
      assert.equal(JSON.stringify(result3), '{"promjena":"75%","greske":["Function should return 4 values when parameter is a number","This function should return 2 values when parameter is string","This function should return no values when there is no parameter"]}');
    });
    it('should return 33.3% accuracy (different tests)', function() {
      var report7 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":2,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var report8 = "{\"stats\":{\"suites\":2,\"tests\":3,\"passes\":2,\"pending\":0,\"failures\":1,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var result4 = TestParser.porediRezultate(report7, report8);
      var niz = ["This function should return 2 values when parameter is string"];
      assert.equal(result4.promjena, "33.3%", "Promjena treba biti 33.3%");
      assert.deepEqual(result4.greske,niz);
      assert.equal(JSON.stringify(result4), '{"promjena":"33.3%","greske":["This function should return 2 values when parameter is string"]}');
    });
    it('should return 66.7% accuracy (different tests)', function() {
      var report9 = "{\"stats\":{\"suites\":2,\"tests\":3,\"passes\":1,\"pending\":0,\"failures\":2,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var report10 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":1,\"pending\":0,\"failures\":1,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var result5 = TestParser.porediRezultate(report9, report10);
      var niz = ["Function should return 3 values when parameter is boolean","This function should return no values when there is no parameter"];
      assert.equal(result5.promjena, "66.7%", "Promjena treba biti 66.7%");
      assert.deepEqual(result5.greske,niz);
      assert.equal(JSON.stringify(result5), '{"promjena":"66.7%","greske":["Function should return 3 values when parameter is boolean","This function should return no values when there is no parameter"]}');
      });
    it('should return 50% accuracy (different tests)', function() {
      var report11 = "{\"stats\":{\"suites\":2,\"tests\":3,\"passes\":1,\"pending\":0,\"failures\":2,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"A function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"A function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var report12 = "{\"stats\":{\"suites\":2,\"tests\":4,\"passes\":2,\"pending\":0,\"failures\":2,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 5 values when parameter is double\",\"fullTitle\":\"Function should return 5 values when parameter is double\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"A function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"A function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 5 values when parameter is double\",\"fullTitle\":\"Function should return 5 values when parameter is double\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var result6 = TestParser.porediRezultate(report11, report12);
      var niz = ["A function should return no values when there is no parameter","Function should return 3 values when parameter is boolean"];
      assert.equal(result6.promjena, "50%", "Promjena treba biti 50%");
      assert.deepEqual(result6.greske,niz);
      assert.equal(JSON.stringify(result6), '{"promjena":"50%","greske":["A function should return no values when there is no parameter","Function should return 3 values when parameter is boolean"]}');
      });
    it('should return 0% accuracy and an error (different tests)', function() {
      var report13 = ":{\"suites\":2,\"tests\":3,\"passes\":1,\"pending\":0,\"failures\":2,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"A function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"A function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var report14 = "{\"stats\":{\"suites\":2,\"tests\":4,\"passes\":2,\"pending\":0,\"failures\":2,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 5 values when parameter is double\",\"fullTitle\":\"Function should return 5 values when parameter is double\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"A function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"A function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 5 values when parameter is double\",\"fullTitle\":\"Function should return 5 values when parameter is double\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var result7 = TestParser.porediRezultate(report13, report14);
      var niz = [];
      assert.equal(result7.promjena, "0%", "Testovi se ne mogu izvršiti");
      assert.equal(JSON.stringify(result7), '{"promjena":"0%","greske":"Testovi se ne mogu izvršiti"}');
      });
    it('should return 0% accuracy (different tests)', function() {
      var report15 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":2,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var report16 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":2,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var result8 = TestParser.porediRezultate(report15, report16);
      var niz = [];
      assert.equal(result8.promjena, "0%", "Promjena treba biti 0%");
      assert.deepEqual(result8.greske,niz);
      assert.equal(JSON.stringify(result8), '{"promjena":"0%","greske":[]}');
      });
    it('should return 0% accuracy (no failures in first and no tests in second) (different tests)', function() {
      var report17 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":2,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var report18 = "{\"stats\":{\"suites\":2,\"tests\":0,\"passes\":0,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[],\"pending\":[],\"failures\":[],\"passes\":[]}";
      var result9 = TestParser.porediRezultate(report17, report18);
      var niz = [];
      assert.equal(result9.promjena, "0%", "Promjena treba biti 0%");
      assert.deepEqual(result9.greske,niz);
      assert.equal(JSON.stringify(result9), '{"promjena":"0%","greske":[]}');
      });
    it('should return 100% accuracy (no tests in second) (different tests)', function() {
      var report19 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":1,\"pending\":0,\"failures\":1,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
      var report20 = "{\"stats\":{\"suites\":2,\"tests\":0,\"passes\":0,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[],\"pending\":[],\"failures\":[],\"passes\":[]}";
      var result10 = TestParser.porediRezultate(report19, report20);
      var niz = ["This function should return 2 values when parameter is string"];
      assert.equal(result10.promjena, "100%", "Promjena treba biti 100%");
      assert.equal(JSON.stringify(result10), '{"promjena":"100%","greske":["This function should return 2 values when parameter is string"]}');
      });
    it('should return 0% accuracy (no tests)', function() {
      var report21 = "{\"stats\":{\"suites\":2,\"tests\":0,\"passes\":0,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[],\"pending\":[],\"failures\":[],\"passes\":[]}";
      var report22 = "{\"stats\":{\"suites\":2,\"tests\":0,\"passes\":0,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[],\"pending\":[],\"failures\":[],\"passes\":[]}";
      var result11 = TestParser.porediRezultate(report21, report22);
      var niz = [];
      assert.equal(result11.promjena, "0%", "Promjena treba biti 0%");
      assert.deepEqual(result11.greske,niz);
      assert.equal(JSON.stringify(result11), '{"promjena":"0%","greske":[]}');
      });
  });
});
