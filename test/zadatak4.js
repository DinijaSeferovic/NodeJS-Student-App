/*var TestParser = require('../testoviparser');
var chai = require('chai'); */
var assert = chai.assert;
describe('TestParser', function() {
 describe('porediRezultate()', function() {
   it('should return 100% accuracy (same tests)', function() {
     var report1 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":2,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 3 values when parameter is a number\",\"fullTitle\":\"Function should return 3 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"A Function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"A Function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is a number\",\"fullTitle\":\"Function should return 3 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
     var report2 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":2,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"A Function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is a number\",\"fullTitle\":\"Function should return 3 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"A Function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is a number\",\"fullTitle\":\"Function should return 3 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
     var result1 = TestParser.porediRezultate(report1, report2);
     assert.equal(result1.promjena, "100%", "Promjena treba biti 100%");
     assert.deepEqual(result1.greske,[]);
     assert.equal(JSON.stringify(result1), '{"promjena":"100%","greske":[]}');
   });
   it('should return 50% accuracy (same tests)', function() {
    var report3 = "{\"stats\":{\"suites\":2,\"tests\":4,\"passes\":4,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
    var report4 = "{\"stats\":{\"suites\":2,\"tests\":4,\"passes\":2,\"pending\":0,\"failures\":2,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
    var result2 = TestParser.porediRezultate(report3, report4);
    var niz = ["Function should return 4 values when parameter is a number", "This function should return no values when there is no parameter"];
    assert.equal(result2.promjena, "50%", "Promjena treba biti 50%");
    assert.deepEqual(result2.greske,niz);
    assert.equal(JSON.stringify(result2), '{"promjena":"50%","greske":["Function should return 4 values when parameter is a number","This function should return no values when there is no parameter"]}');
    });
    it('should return 75% accuracy (different tests)', function() {
    var report5 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":0,\"pending\":0,\"failures\":2,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return 2 values when parameter is string\",\"fullTitle\":\"This function should return 2 values when parameter is string\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return 4 values when parameter is a number\",\"fullTitle\":\"Function should return 4 values when parameter is a number\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[]}";
    var report6 = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":1,\"pending\":0,\"failures\":1,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[{\"title\":\"should return no values when there is no parameter\",\"fullTitle\":\"This function should return no values when there is no parameter\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"passes\":[{\"title\":\"should return 3 values when parameter is boolean\",\"fullTitle\":\"Function should return 3 values when parameter is boolean\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}";
    var result3 = TestParser.porediRezultate(report5, report6);
    var niz = ["Function should return 4 values when parameter is a number", "This function should return 2 values when parameter is string", "This function should return no values when there is no parameter"];
    assert.equal(result3.promjena, "75%", "Promjena treba biti 75%");
    assert.deepEqual(result3.greske,niz);
    assert.equal(JSON.stringify(result3), '{"promjena":"75%","greske":["Function should return 4 values when parameter is a number","This function should return 2 values when parameter is string","This function should return no values when there is no parameter"]}');
    });
  });
});
